# Chinese (Traditional) translations for PROJECT.
# Copyright (C) 2024 ORGANIZATION
# This file is distributed under the same license as the PROJECT project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
msgid ""
msgstr ""
"Project-Id-Version: PROJECT VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2024-10-03 01:53-0400\n"
"PO-Revision-Date: 2024-10-03 00:27-0400\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_Hant\n"
"Language-Team: zh_Hant <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: Solution.py:22
msgid "No solution found for this knowledge point."
msgstr ""

#: Solution.py:31
msgid "No solution generator available for this knowledge point."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:40
msgid "Error: {error}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:61
msgid "zero"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:63
msgid "thousand"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:63
msgid "hundred"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:63
msgid "ninety"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:63
msgid "eighty"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:64
msgid "seventy"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:64
msgid "sixty"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:64
msgid "fifty"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:64
msgid "forty"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:64
msgid "thirty"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:65
msgid "twenty"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:65
msgid "nineteen"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:65
msgid "eighteen"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:65
msgid "seventeen"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:65
msgid "sixteen"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:66
msgid "fifteen"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:66
msgid "fourteen"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:66
msgid "thirteen"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:66
msgid "twelve"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:66
msgid "eleven"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:67
msgid "ten"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:67
msgid "nine"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:67
msgid "eight"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:67
msgid "seven"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:67
msgid "six"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:67
msgid "five"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:67
msgid "four"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:68
msgid "three"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:68
msgid "two"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:68
msgid "one"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:99
#: SolutionGenerator/SolutionGenerator.py:111
msgid "Since the result is 0, we can ignore 0 in the tens place."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:101
#: SolutionGenerator/SolutionGenerator.py:113
msgid "Write down the {num} in the tens place."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:128
msgid "class=\"number-line-circle\""
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:140
msgid ""
"You see that the number {arg2} is on the right of {arg1}, so {arg2} is "
"greater than {arg1}."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:142
msgid ""
"You see that the number {arg2} is on the left of {arg1}, so {arg2} is "
"smaller than {arg1}."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:143
msgid ""
"You see that the number {arg1} is equal to itself, so {arg1} is equal to "
"{arg2}."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:155
msgid ""
"In this case, because there are no ones in {arg1}, the \"__ones\" part of"
" the question is 0, and we can also simplify the question to \"{arg1} = "
"{arg1 // 10} tens\"."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:163
#, python-format
msgid "$+$ ${\\color{Salmon} %i }$ ones"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:187
#: SolutionGenerator/SolutionGenerator.py:212
msgid "{num} has 1 digit and We put {num} in the ones place"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:188
#: SolutionGenerator/SolutionGenerator.py:213
msgid ""
"{num} has digits in both the ones and tens places, so we write {num} in "
"the correct columns based on its ones and tens digits."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:263
msgid ""
"**Step {step}:** Now we need to find the number that comes after {num}. "
"We know the numbers are going up by {diff} each time, so the number after"
" {num} should be {num_after}."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:270
msgid ""
"**Step 2:** We know that the numbers are going up by {diff} each time, so"
" the number that comes after {num} should be {num_after}."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:273
msgid ""
"**Step 2:** We know that the numbers are going up by {diff} each time, so"
" the number that comes before {num} should be {num_before}."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:307
msgid "So the missing number is {num}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:308
msgid "So the missing numbers are "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:312
msgid "and {last_num}."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:335
msgid "The leftmost digit"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:336
msgid "The second digit from the left"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:337
msgid "We compare the third digit from the left"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:341
msgid "{} in both numbers is {}, which is the same."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:343
msgid "{} in the first number is {}, and in the second number is {}."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:347
msgid ""
"Since both numbers have the same number of digits, compare the digits "
"from left to right, taking into account their place value.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:353
msgid "**Step {}:** "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:360
msgid ""
"**Step {}:** Since {} is less than {}, we can conclude that the number {}"
" is less than the number {}."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:363
msgid ""
"**Step {}:** Since {} is greater than {}, we can conclude that the number"
" {} is greater than the number {}."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:372
msgid ""
"\n"
"Since all digits are the same, we can conclude that the number {} is "
"equal to the number {}.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:381
msgid ""
"Since {} has {} digits, while {} has {} digits, we know that {} is larger"
" than {}. Therefore, the answer is\n"
"$$\n"
"{} {{\\color{{Salmon}}\\:>\\:}} {}\n"
"$$"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:384
msgid ""
"Since {} has {} digits, while {} has {} digits, we know that {} is less "
"than {}. Therefore, the answer is\n"
"$$\n"
"{} {{\\color{{Salmon}}\\:>\\:}} {}\n"
"$$"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:396
msgid "Solution"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:421
msgid "What is {} in word form?"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:423
msgid "What number is **{}**"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:438
msgid "apples"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:438
msgid "cupcakes"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:438
msgid "bananas"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:438
msgid "cookies"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:438
msgid "books"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:438
msgid "toys"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:438
msgid "flowers"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:473
msgid "So the answer is $[[arg1//arg2]]$."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:509
msgid ""
"First compare the numbers, {} equals {}. Place the first number as the "
"**multiplicand** and the second number as the **multiplier**."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:511
msgid ""
"First compare the numbers, {} is greater than {} **because in units place"
" digits {} is greater than {}**. First place the bigger number as "
"**multiplicand** and then second number as **multiplier**."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:514
msgid ""
"First compare the numbers, {} is greater than {} **because in tens place "
"digits {} is greater than {}**. First place the bigger number as "
"**multiplicand** and then second number as **multiplier**."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:530
msgid "{}/{} is a proper fraction because {} < {}."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:532
msgid "{}/{} is an improper fraction because {} > {}."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:563
msgid ""
"\n"
"**Step 1:**\n"
"In this question, you divide the **hundreds** first. You divide {} "
"hundreds into {} groups of 100.\n"
"\n"
"**Step 1.1:** Write {} above the hundreds' place to show you have put 100"
" in each group.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:570
msgid ""
"\n"
"**Step 1.2:** Write {} underneath to show {} hundreds have been used.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:574
msgid ""
"\n"
"**Step 1.3:** You subtract {} from {} to see how many blocks are left "
"that need to be grouped equally.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:580
msgid ""
"\n"
"**Step 2:**\n"
"Letâ€™s look at the {} tens. When you divide them into {} equal groups, you"
" can put {} tens in each group.\n"
"\n"
"**Step 2.1:** Write {} above the tens' place to show you have put {} tens"
" in each group.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:587
msgid ""
"\n"
"**Step 2.2:** Write {} underneath to show that {} groups of {} tens have "
"been used.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:593
msgid ""
"\n"
"**Step 3:**\n"
"Now you need to group the {} ones that are left into {} equal groups.\n"
"\n"
"**Step 3.1:** Write {} above the ones' place to show you have put {} ones"
" in each group.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:600
msgid ""
"\n"
"**Step 3.2:** Write {} underneath to show {} groups of {} have been used."
"\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:604
msgid ""
"\n"
"**Step 3.3:** Subtract {} from {} to see how many blocks are left.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:610
msgid ""
"\n"
"**Step 4: Write the remainder near the quotient and check**\n"
"As you can see, {} cannot be divided equally into {} equal groups. There "
"is {} unit left over, and it can be represented as R (remainder).\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:616
msgid ""
"\n"
"When you come across a step in long division where the divisor is larger "
"than the current working dividend, you need to put a zero in the "
"quotient.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:620
msgid ""
"\n"
"**Step 1:**\n"
"How many {}s are there in {}? Since the answer is 0, we move on to the "
"next place value.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:625
msgid ""
"\n"
"**Step 1.2:** We calculate {} Ã— {} = {} and write it below {}.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:629
msgid ""
"\n"
"**Step 1.3:** We subtract {} from {} and write {}.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:635
msgid ""
"\n"
"**Step 2:**\n"
"We bring down the number in the onesâ€™ place.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:640
msgid ""
"\n"
"**Step 2.2:** How many {}s are there in {}? We estimate {} and write it "
"above the ones' place.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:644
msgid ""
"\n"
"**Step 2.3:** We calculate {} Ã— {} = {} and write it below {}.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:650
msgid ""
"\n"
"**Step 3: Write the remainder near the quotient and check**\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:657
#: SolutionGenerator/SolutionGenerator.py:773
msgid "Unsupported number of digits"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:712
#: SolutionGenerator/SolutionGenerator.py:748
msgid ""
"\n"
"**Step 2:**\n"
"**Step 2.1:** How many {}s are there in {}? We estimate {} and write it "
"above the ten's place.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:717
msgid ""
"\n"
"**Step 2.2:** We calculate ${} \times {} = {}$ and write {} below {}.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:721
msgid ""
"\n"
"**Step 2.3:** We subtract {} from {} and write {}.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:727
msgid ""
"\n"
"**Step 3:**\n"
"**Step 3.1:** How many {}s are there in {}? We estimate {} and write it "
"above the one's place.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:732
#: SolutionGenerator/SolutionGenerator.py:758
msgid ""
"\n"
"**Step 3.2:** We calculate ${} \times {} = {}$ and write {} below {}.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:736
#: SolutionGenerator/SolutionGenerator.py:762
msgid ""
"\n"
"**Step 3.3:** We subtract {} from {} and write {}.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:742
#: SolutionGenerator/SolutionGenerator.py:768
msgid ""
"\n"
"**Step 4: Write the remainder near the quotient and check**\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:753
msgid ""
"\n"
"**Step 3:**\n"
"**Step 3.1:** How many {}s are there in {}? We estimate {} and write it "
"above the ten's place.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:821
msgid "Division by zero is undefined."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:841
msgid ""
"\n"
"**Step 3:** Since we have no leftovers, we have finished the calculation."
"\n"
"$$\n"
"\\begin{{aligned}}\n"
"&\\underline{{\\: 0.{{\\color {{Salmon}} {} }}\\:}} \\\\[-5pt]\n"
"{} &\\big){} \\:0 \\\\[-4pt]\n"
"-&{{\\:{{\\color {{Salmon}} {} }}{{\\:\\!\\color {{Salmon}} {} }}\\:}} "
"\\\\[-4pt]\n"
"\\hline\n"
"&\\text{{ }}\\: \\:\\:{{\\!\\color {{Salmon}} {}}}\\[-4pt]\n"
"\\end{{aligned}}\n"
"\\: \\longrightarrow \\:\n"
"{}\n"
"$$\n"
"Therefore, the final solution is {}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:861
msgid ""
"\n"
"**Step 3:** Since we obtained a non-zero remainder in the previous step, "
"the calculation isn't complete. Because the remainder {} can't be divided"
" evenly by {}, we need to form a new number to continue the division "
"process.\n"
"$$\n"
"\\begin{{aligned}}\n"
"&\\underline{{\\: 0.{{\\color {{Salmon}} {} }}\\:}} \\\\[-5pt]\n"
"{} &\\big){} \\:0 \\\\[-4pt]\n"
"-&{{\\:{{\\color {{Salmon}} {} }}{{\\:\\!\\color {{Salmon}} {} }}\\:}} "
"\\\\[-4pt]\n"
"\\hline\n"
"&\\text{{ }}\\: \\:\\:{{\\!\\color {{Salmon}} {}}}\\[-4pt]\n"
"\\end{{aligned}}\n"
"$$"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:873
msgid ""
"\n"
"**Step 4:** How many times does {} go into {}? ${}\times{} = {}$, we "
"place the number {} in the quotient, next to the {}.\n"
"$$\n"
"\\begin{{aligned}}\n"
"&\\underline{{\\text{{ }} \\:{}\\text{{ }} }}\\[-5pt]\n"
"{} &\\big){} \\:0 \\\\[-4pt]\n"
"\\end{{aligned}}\n"
"$$"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:883
msgid "Unsupported number of decimal digits"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:927
msgid ""
"\n"
"**Step 2:** We start with the rightmost column. In this case, it's the "
"tenths column. We add the digits in that column: ${} + {} = {}$ and write"
" {} in the tenths column.\n"
"$$\n"
"\\begin{{array}}{{r c r}}\n"
"&0.{}\\\n"
"+&0.{}\\\n"
"\\hline\n"
"&\\phantom{{0}}\\,{}{}\n"
"\\end{{array}}\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:939
msgid ""
"\n"
"**Step 3:** Then, we move to the left column, the ones column. We add the"
" digits in that column: ${} + {} = {}$. Write the result in the ones "
"column and add the decimal point.\n"
"$$\n"
"\\begin{{array}}{{r c r}}\n"
"&{}\\\n"
"+&{}\\\n"
"\\hline\n"
"&{}{}\\\n"
"\\end{{array}}\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:960
msgid ""
"\n"
"**Step 2:** Align the decimal points by adding zeros where necessary to "
"equalize the number of decimal places.\n"
"$$\n"
"\\begin{{array}}{{r c r}}\n"
"&0.{}\\\n"
"+&0.{}0\\\n"
"\\hline\n"
"\\end{{array}}\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:971
msgid ""
"\n"
"**Step 3:** Start with the hundredths column. Add the digits: $0 + {} = "
"{}$. Write {} in the hundredths column.\n"
"$$\n"
"\\begin{{array}}{{r c r}}\n"
"&0.{}0\\\n"
"+&0.{}\\\n"
"\\hline\n"
"\\end{{array}}\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:982
msgid ""
"\n"
"**Step 4:** Move to the tenths column. Add the digits: ${} + {} = {}$. "
"Write {} in the tenths column.\n"
"$$\n"
"\\begin{{array}}{{r c r}}\n"
"&0.{}\\\n"
"+&0.{}\\\n"
"\\hline\n"
"\\end{{array}}\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:998
msgid ""
"\n"
"**Step 2:** Start with the rightmost column, the hundredths. Add the "
"digits: ${} + {} = {}$ and write {} in the hundredths column.\n"
"$$\n"
"\\begin{{array}}{{r c r}}\n"
"&0.{}\\\n"
"+&0.{}\\\n"
"\\hline\n"
"\\end{{array}}\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1009
msgid ""
"\n"
"**Step 3:** Move to the tenths column. Add the digits: ${} + {} = {}$. "
"Write {} in the tenths column.\n"
"$$\n"
"\\begin{{array}}{{r c r}}\n"
"&0.{}\\\n"
"+&0.{}\\\n"
"\\hline\n"
"\\end{{array}}\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1020
msgid ""
"\n"
"**Step 4:** Carry over if necessary. Then, move to the whole number "
"column. Add the whole number part and place the result in the final "
"answer.\n"
"$$\n"
"\\begin{{array}}{{r c r}}\n"
"&{}\\\n"
"+&{}\\\n"
"\\hline\n"
"&{}{}\\\n"
"\\end{{array}}\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1033
#: SolutionGenerator/SolutionGenerator.py:1239
msgid "Unexpected number of fraction digits in arguments"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1076
msgid ""
"\n"
"**Step 2:** We start with the rightmost column. In the rightmost column, "
"we have ${0} - {1} = {2}$. Write the result in the tenths column.\n"
"$$\n"
"\\begin{{array}}{{r c r}}\n"
"&0.{3}\\\n"
"-&0.{4}\\\n"
"\\hline\n"
"\\end{{array}}\n"
"\\:\\:\\longrightarrow\\:\\:  \n"
"\\begin{{array}}{{r c r}}\n"
"\\\n"
"&0.{{\\color{{Salmon}} {0}}}\\\n"
"-&0.{{\\color{{Salmon}} {1}}} \\\n"
"\\hline\n"
"&\\phantom{{0}}\\,{{\\color{{Salmon}} {2}}}\n"
"\\end{{array}}\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1095
msgid ""
"\n"
"**Step 3:** Move to the ones column. In this column, we have $0 - 0 = 0$."
" Write the result in the ones column and remember to place the decimal "
"point.\n"
"$$\n"
"\\begin{{array}}{{l l}}\\\n"
"&0.{0}\\\n"
"-&0.{1}\\\n"
"\\hline\n"
"&\\:\\,\\,.{2}\\\n"
"\\end{{array}}\n"
"\\:\\:\\longrightarrow\\:\\:  \n"
"\\begin{{array}}{{l l}}\\\n"
"&0.{0}\\\n"
"-&0.{1}\\\n"
"\\hline\n"
"&{3}\\\n"
"\\end{{array}}\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1126
msgid ""
"\n"
"**Step 2:** Align the decimal points by adding zeros where necessary.\n"
"$$\n"
"\\begin{{array}}{{r c r}}\n"
"&{0}\\phantom{{0}}\\\n"
"-&{1} \\\n"
"\\hline\n"
"\\end{{array}}\n"
"\\:\\:\\longrightarrow\\:\\:  \n"
"\\begin{{array}}{{r c r}}\n"
"&{0}{{\\color{{Salmon}} 0}}\\\n"
"-&{1} \\\n"
"\\hline\n"
"\\end{{array}}\n"
"$$\n"
"*Note: Align the decimal points and add zeros where needed to ensure "
"accurate subtraction.*\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1144
msgid ""
"\n"
"**Step 3:** Start with the rightmost column. Since 0 is smaller than {1},"
" we need to borrow from the left column, making it 10. Now we have $10 - "
"{1} = {2}$. Write the result in the hundredths column.\n"
"$$\n"
"\\begin{{array}}{{r c r}}\n"
"&0.00\\\n"
"-&{3} \\\n"
"\\hline\n"
"\\end{{array}}\n"
"\\:\\:\\longrightarrow\\:\\:  \n"
"\\begin{{array}}{{r c r}}\n"
"&0.{{\\color{{Salmon}} \\cancel{4} }}{{\\color{{Salmon}}\\cancel0 }}\\\n"
"-&0.{5}{{\\color{{Salmon}} {1}}} \\\n"
"\\hline\n"
"&\\phantom{{0}}\\phantom{{0}}\\,{{\\color{{Salmon}} {2}}}\n"
"\\end{{array}}\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1162
msgid ""
"\n"
"**Step 4:** Move to the left column. After borrowing 1, we subtract ${0} "
"- {1} = {2}$ in this column and write the result in the tenths column.\n"
"$$\n"
"\\begin{{array}}{{r c r}}\n"
"&0.{{\\cancel{0} }}{{\\cancel0}}\\\n"
"-&{3}\\\n"
"\\hline\n"
"\\end{{array}}\n"
"\\:\\:\\longrightarrow\\:\\:  \n"
"\\begin{{array}}{{r c r}}\n"
"&0.{{\\color{{Salmon}} {0}}}{6}\\\n"
"-&0.{{\\color{{Salmon}} {1}}}{7} \\\n"
"\\hline\n"
"&\\,\\,{{\\color{{Salmon}} {2}}}{5}\\\n"
"\\end{{array}}\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1180
msgid ""
"\n"
"**Step 5:** The first number in the leftmost column is 0. We have $0 - 0 "
"= 0$ in this column. Write the result in the ones column and place the "
"decimal point.\n"
"$$\n"
"\\begin{{array}}{{l l}}\n"
"&0.{{ \\cancel{1} }}{{\\cancel0}}\\\n"
"-&{2} \\\n"
"\\hline\n"
"&\\,\\,{3} \\\n"
"\\end{{array}}\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1197
msgid ""
"\n"
"**Step 2:** Start with the rightmost column. Subtract ${0} - {1} = {2}$ "
"in the hundredths column and write the result.\n"
"$$\n"
"\\begin{{array}}{{r c r}}\n"
"&0.{3}\\\n"
"-&0.{4}\\\n"
"\\hline\n"
"\\end{{array}}\n"
"\\:\\:\\longrightarrow\\:\\:  \n"
"\\begin{{array}}{{r c r}}\n"
"&0.{{\\color{{Salmon}} {0}}}\\\n"
"-&0.{{\\color{{Salmon}} {1}}} \\\n"
"\\hline\n"
"&\\phantom{{0}}\\,{{\\color{{Salmon}} {2}}}\n"
"\\end{{array}}\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1215
msgid ""
"\n"
"**Step 3:** Move to the tenths column. Subtract ${0} - {1} = {2}$ and "
"write the result in the tenths column.\n"
"$$\n"
"\\begin{{array}}{{r c r}}\n"
"&0.{{{3}}}\\\n"
"-&0.{{{4}}}\\\n"
"\\hline\n"
"\\end{{array}}\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1226
msgid ""
"\n"
"**Step 4:** Move to the ones column. Subtract $0 - 0 = 0$ and write the "
"result in the ones column. Place the decimal point.\n"
"$$\n"
"\\begin{{array}}{{l l}}\n"
"&0.{{{0}}}\\\n"
"-&0.{{{1}}}\\\n"
"\\hline\n"
"&{2}\n"
"\\end{{array}}\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1279
#: SolutionGenerator/SolutionGenerator.py:1310
msgid "**Step 3:** The fraction {}/{} is already in its lowest term."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1283
#: SolutionGenerator/SolutionGenerator.py:1314
msgid ""
"**Step 3:** Simplify the fraction {}/{} by dividing both the numerator "
"and denominator by {}: $\\frac{{{}}}{{{}}} = \\frac{{{}}}{{{}}}$"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1292
#: SolutionGenerator/SolutionGenerator.py:1323
msgid ""
"**Step 4:** Convert the improper fraction to a mixed number: "
"$\\frac{{{}}}{{{}}} = {} \\frac{{{}}}{{{}}}$"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1296
#: SolutionGenerator/SolutionGenerator.py:1327
msgid ""
"**Step 4:** The fraction is already a proper fraction: "
"$\\frac{{{}}}{{{}}}$"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1393
#: SolutionGenerator/SolutionGenerator.py:1521
msgid "    - {} is prime. So it is the only factor"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1395
#: SolutionGenerator/SolutionGenerator.py:1523
msgid ""
"    - Start from small, the smallest number that can divide {} is {}, so "
"we write down {}. Then ${} / {} = {}$.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1401
#: SolutionGenerator/SolutionGenerator.py:1529
msgid ""
"    - Now, the smallest number that can divide {} is {}, so we write down"
" {}. Then ${} / {} = {}$.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1406
#: SolutionGenerator/SolutionGenerator.py:1534
msgid "    - Notice {} is also a prime number, so we write down {}.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1411
#: SolutionGenerator/SolutionGenerator.py:1539
msgid "    - So, the prime factors of {} are {} and {}. (${} = "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1445
msgid "    - There are no common prime factors of {} and {}.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1447
msgid "    - The common prime factor of {} and {} is {}.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1449
msgid "    - The common prime factors of {} and {} are "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1453
#: SolutionGenerator/SolutionGenerator.py:1464
#: SolutionGenerator/SolutionGenerator.py:1575
msgid " and {}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1456
msgid "    - There are no unique prime factors of {} and {}.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1458
msgid "    - The unique prime factor of {} and {} is {}.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1460
msgid "    - The unique prime factors of {} and {} are "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1567
msgid "factors"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1568
msgid "factor"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1572
msgid "is {}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1573
msgid "are {}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1599
#: SolutionGenerator/SolutionGenerator.py:1682
msgid " \\times \\frac{{{}}}{{{}}}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1619
msgid "The result cannot be simplified."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1623
#: SolutionGenerator/SolutionGenerator.py:1706
msgid ""
"Since the answer is an improper fraction, we can simplify it into the "
"mixed number ${}\\frac{{{}}}{{{}}}$"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1627
#: SolutionGenerator/SolutionGenerator.py:1710
msgid ""
"The result can be simplified. When we divide both {} and {} by their "
"greatest common divisor {}, we get {} and {}, respectively."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1633
#: SolutionGenerator/SolutionGenerator.py:1716
msgid ""
" Since the answer is an improper fraction, we can simplify it into the "
"mixed number ${}\\frac{{{}}}{{{}}}$"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1643
#: SolutionGenerator/SolutionGenerator.py:1726
msgid ""
"\\:\\:\\:\\longrightarrow    \\:\\: \\frac{{{}\\color "
"{{Salmon}}\\div{}}}{{{}\\color {{Salmon}}\\div{}}} = \\frac{{\\color "
"{{Salmon}}{}}}{{\\color {{Salmon}}{{{}}}}}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1649
#: SolutionGenerator/SolutionGenerator.py:1732
msgid ""
" = {{\\color {{Salmon}}{}}}\\frac{{\\color {{Salmon}}{}}}{{\\color "
"{{Salmon}}{}}}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1702
msgid "The result cannot be simplified further."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1797
msgid "{}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1800
msgid "-\\frac{{{}}}{{{}}}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1801
msgid "\\frac{{{}}}{{{}}}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1802
msgid "{}\\frac{{{}}}{{{}}}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1813
msgid "Add"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1814
msgid "Subtract"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1823
msgid "- {}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1824
msgid "+ {}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1857
#: SolutionGenerator/SolutionGenerator.py:1971
#: SolutionGenerator/SolutionGenerator.py:2001
#: SolutionGenerator/SolutionGenerator.py:2031
msgid "places"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1858
#: SolutionGenerator/SolutionGenerator.py:1970
#: SolutionGenerator/SolutionGenerator.py:2000
#: SolutionGenerator/SolutionGenerator.py:2032
msgid "place"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1874
#: SolutionGenerator/SolutionGenerator.py:2048
msgid " or $ {} $"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1909
msgid "**Step {}:**"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1911
msgid " Start with {} divided by {}, "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1913
msgid " Bring down {} "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1915
msgid ""
"but {} does not divide {} so we write zero, and move to the right.\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1920
msgid "so we get {} divided by {}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1922
msgid " because we had a remainder in the prior step"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:1923
msgid ""
". {} divided by {} equals {}, so we write that down.\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2068
msgid " + {}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2069
msgid " = {}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2075
msgid "are {} numbers"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2076
msgid "is 1 number"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2082
msgid "{} \\div {} = {}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2115
#: SolutionGenerator/SolutionGenerator.py:2121
#, python-format
msgid "{\\color{salmon}%s},"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2130
#, python-format
msgid "In this case, the middle number is at position %s."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2131
#, python-format
msgid "In this case, the middle numbers are at positions %s and %s."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2140
#, python-format
msgid ""
"Because the list is of even length, we must take the mean of the two "
"middle numbers, %s and %s. The mean of %s and %s is %s."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2175
#, python-format
msgid ", %s"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2185
#, python-format
msgid "{\\color{salmon}%s}, "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2189
#, python-format
msgid "{\\color{salmon}%s}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2204
#, python-format
msgid "or \"%s squared\""
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2206
#, python-format
msgid "or \"%s cubed\""
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2214
#, python-format
msgid "Ã—%s"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2252
#: SolutionGenerator/SolutionGenerator.py:2711
msgid ""
"**Step 1:** Based on the **Order of Operations**, we evaluate the "
"equation inside the parenthesis first."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2256
#: SolutionGenerator/SolutionGenerator.py:2714
#: SolutionGenerator/SolutionGenerator.py:2909
msgid ""
"In this case, there are no parenthesis.\n"
"\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2262
#, python-format
msgid "**Step %s:** We now check for exponents within the parenthesis. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2265
#: SolutionGenerator/SolutionGenerator.py:2915
msgid ""
"In this case there are no exponents within the parenthesis.\n"
"\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2268
msgid "In this case there is 1 exponent within the parenthesis. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2270
#, python-format
msgid "In this case there are %s exponents within the parenthesis. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2288
#, python-format
msgid ""
"**Step %s:** We now check for multiplication and division operations "
"within the parenthesis. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2292
#: SolutionGenerator/SolutionGenerator.py:2923
msgid ""
"In this case there are no multiplication or division operations within "
"the parenthesis.\n"
"\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2295
#, python-format
msgid ""
"In this case there are %s multiplication and %s division operations "
"within the parenthesis and we go from left to right."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2326
#, python-format
msgid ""
"**Step %s:** We now check for addition and subtraction operations within "
"the parenthesis. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2330
msgid ""
"In this case there are no addition or subtraction operations within the "
"parenthesis.\n"
"\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2332
#, python-format
msgid ""
"In this case there are %s addition and %s subtraction operations within "
"the parenthesis and we go from left to right."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2361
#, python-format
msgid ""
"**Step %s**: Now that we've finished the operations within the "
"parenthesis, we do operations outside of the parenthesis. Starting with "
"exponents. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2365
msgid "In this case there are no exponents left.\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2368
msgid "In this case there is 1 exponent operation left."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2370
#, python-format
msgid "In this case there are %s exponent operations left."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2386
#, python-format
msgid "**Step %s:** We now check for multiplication and division operations. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2389
#: SolutionGenerator/SolutionGenerator.py:3123
msgid ""
"In this case there are no multiplication or division operations left.\n"
"\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2391
#, python-format
msgid ""
"In this case there are %s multiplication and %s division operations and "
"we go from left to right."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2422
#, python-format
msgid "**Step %s:** We now check for addition and subtraction operations. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2425
#: SolutionGenerator/SolutionGenerator.py:3198
msgid ""
"In this case there are no addition or subtraction operations left.\n"
"\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2427
#, python-format
msgid ""
"In this case there are %s addition and %s subtraction operations and we "
"go from left to right."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2481
msgid "{} {} {} {} {}"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2484
msgid ""
"The numerator in the {} fraction and the denominator in the {} fraction "
"have a greatest common divisor of {}. We divide these two numbers by {}."
"\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2555
msgid "**Step {}:**  "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2572
msgid ""
"**Step {}:** Now all fractions have been simplified to their lowest "
"terms, multiply them.\n"
"$$\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2720
msgid "**Step {}:** We now check for exponents within the parenthesis."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2721
msgid ""
"In this case, there are no exponents within the parenthesis.\n"
"\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2723
msgid ""
"**Step {}:** We now check for multiplication and division operations "
"within the parenthesis."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2728
msgid ""
"In this case, there are no multiplication or division operations within "
"the parenthesis.\n"
"\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2731
msgid ""
"In this case, there are {} multiplication and {} division operations "
"within the parenthesis, and we simplify them left to right."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2764
#: SolutionGenerator/SolutionGenerator.py:2787
msgid "[{}\\div{{\\color{{Salmon}}{{{}}}}}|{}\\div{{\\color{{Salmon}}{{{}}}}}]"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2808
msgid ""
"**Step {}:** We now check for addition and subtraction operations within "
"the parenthesis."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2813
#: SolutionGenerator/SolutionGenerator.py:3006
msgid ""
"In this case, there are no addition or subtraction operations within the "
"parenthesis.\n"
"\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2816
msgid ""
"In this case, there are {} addition and {} subtraction operations, and we"
" simplify them from left to right."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2880
msgid "**Step 1:** First convert all mixed numbers into improper fractions."
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2882
msgid ""
"In this case, there are no mixed numbers.\n"
"\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2884
#: SolutionGenerator/SolutionGenerator.py:2992
#: SolutionGenerator/SolutionGenerator.py:2994
#: SolutionGenerator/SolutionGenerator.py:3012
#: SolutionGenerator/SolutionGenerator.py:3100
#: SolutionGenerator/SolutionGenerator.py:3101
#: SolutionGenerator/SolutionGenerator.py:3104
#: SolutionGenerator/SolutionGenerator.py:3106
#: SolutionGenerator/SolutionGenerator.py:3128
#: SolutionGenerator/SolutionGenerator.py:3190
#: SolutionGenerator/SolutionGenerator.py:3191
#: SolutionGenerator/SolutionGenerator.py:3203
#: SolutionGenerator/SolutionGenerator.py:3288
#: SolutionGenerator/SolutionGenerator.py:3289
#: SolutionGenerator/SolutionGenerator.py:3291
#: SolutionGenerator/SolutionGenerator.py:3292
#: SolutionGenerator/SolutionGenerator.py:3305
msgid " = "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2906
msgid ""
"**Step 2:** Based on the **Order of Operations**, we evaluate the "
"equation inside the parenthesis first. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2914
msgid "**Step {}:** We now check for exponents within the parenthesis. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2918
msgid ""
"**Step {}:** We now check for multiplication and division operations "
"within the parenthesis. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:2926
msgid ""
"In this case there are {} multiplication and {} division operations "
"within the parenthesis, and we go from left to right. Simplify at the end"
" if possible. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:3001
msgid ""
"**Step {}:** We now check for addition and subtraction operations within "
"the parenthesis. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:3009
msgid ""
"In this case there are {} addition and {} subtraction operations within "
"the parenthesis, and we go from left to right. Simplify at the end if "
"possible. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:3113
msgid ""
"**Step {}:** Now that we've finished the operations within the "
"parenthesis, we do operations outside of the parenthesis. Starting with "
"exponents. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:3117
msgid ""
"In this case there are no exponents left.\n"
"\n"
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:3120
msgid "**Step {}:** We now check for multiplication and division operations. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:3125
msgid ""
"In this case there are {} multiplication and {} division operations, and "
"we go from left to right. Simplify at the end if possible. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:3195
msgid "**Step {}:** We now check for addition and subtraction operations. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:3200
msgid ""
"In this case there are {} addition and {} subtraction operations, and we "
"go from left to right. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:3296
msgid "**Step {}:** Simplify if possible. "
msgstr ""

#: SolutionGenerator/SolutionGenerator.py:3302
msgid ""
"In this case, the fraction cannot be further simplified.\n"
"\n"
msgstr ""

